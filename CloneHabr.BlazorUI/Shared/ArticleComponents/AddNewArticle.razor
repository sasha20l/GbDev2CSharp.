@inject UserInfo userInfo
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime JsRuntime
@using CloneHabr.Dto.Requests;

<div class="nav-item px-3">
    <NavLink class="nav-link col-3" href="/cabinet" @onclick="OnClickShowHideNewArticleForm">
        <span class="oi oi-plus me-2"></span>Новая статья
    </NavLink>
</div>

<div style="@(showNewArticleCreateForm ? "display:block" : "display:none")">
    <h3>Add New Article</h3>

    <EditForm Model="creationArticleRequest" OnValidSubmit="SubmitForm">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label>Тема статьи</label>
        <InputSelect @bind-Value="creationArticleRequest.ArticleTheme" class="form-control">
            <option value="1">Дизайн</option>
            <option value="2">Веб-разработка</option>
            <option value="3">Мобильная разработка</option>
            <option value="4">Маркетинг</option>

        </InputSelect>


        <label>Название</label>
        <InputText @bind-Value="creationArticleRequest.Name" class="form-control" />
        <br />
        <InputTextArea @bind-Value="creationArticleRequest.Text" class="form-control" />
        <br />
        <button class="btn btn-primary" type="submit">Опубликовать</button>

    </EditForm>
</div>

@code {
    private CreationArticleRequest creationArticleRequest = new();
    private bool showNewArticleCreateForm = false;

    private async Task SubmitForm()
    {
        string uri = "api/Article/CreationArticle";

        creationArticleRequest.LoginUser = userInfo.LoginName;

        using var response = await httpClient.PostAsJsonAsync<CreationArticleRequest>(uri, creationArticleRequest);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Статья опубликована успешно");
            await JsRuntime.InvokeVoidAsync("alert", "Статья опубликована успешно");
            navigationManager.NavigateTo("/cabinet");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Ошибка при публикации");
            Console.WriteLine("Ошибки при публикации");
        }

    }

    private void OnClickShowHideNewArticleForm()
    {
        showNewArticleCreateForm = !showNewArticleCreateForm;
    }
}
